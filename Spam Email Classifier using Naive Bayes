import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report

data = {
    'label': ['spam', 'ham', 'spam', 'ham', 'spam', 'ham', 'spam', 'ham'],
    'message': [
        'Congratulations, you have won a free ticket!',
        'Hey, are we still meeting today?',
        'Claim your $1000 gift card now!',
        'Don\'t forget to submit your assignment.',
        'Winner! You just earned a cash prize.',
        'See you at the party tonight!',
        'Free entry in 2 a weekly competition!',
        'Let\'s catch up over coffee tomorrow.'
    ]
}

df = pd.DataFrame(data)

X = df['message']
y = df['label']

vectorizer = CountVectorizer()
X_counts = vectorizer.fit_transform(X)

X_train, X_test, y_train, y_test = train_test_split(X_counts, y, test_size=0.3, random_state=42)

model = MultinomialNB()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

def predict_message(msg):
    msg_counts = vectorizer.transform([msg])
    prediction = model.predict(msg_counts)[0]
    print(f"\nüì® Message: \"{msg}\"")
    print("‚û°Ô∏è Classified as:", prediction)

predict_message("You have won a lottery, claim now!")
predict_message("Can we reschedule our meeting?")
